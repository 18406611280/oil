<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grainoil.system.mapper.TbBiddingDeliveryMapper">
  <resultMap id="BaseResultMap" type="com.grainoil.system.domain.TbBiddingDelivery">
    <id column="id" property="id" />
    <result column="storage_contract_id" property="storageContractId" />
    <result column="contract_code" property="contractCode" />
    <result column="contract_name" property="contractName" />
    <result column="file_id" property="fileId" />
    <result column="contract_state" property="contractState" />
    <result column="quantity" property="quantity" />
    <result column="begin_date" property="beginDate" />
    <result column="end_date" property="endDate" />
    <result column="create_by" property="createBy" />
    <result column="create_id" property="createId" />
    <result column="create_time" property="createTime" />
    <result column="update_by" property="updateBy" />
    <result column="update_id" property="updateId" />
    <result column="update_time" property="updateTime" />
    <result column="del_flag" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, storage_contract_id, contract_code, contract_name, file_id, contract_state, quantity, 
    begin_date, end_date, create_by, create_id, create_time, update_by, update_id, update_time, 
    del_flag
  </sql>
  <select id="selectByExample" parameterType="com.grainoil.system.domain.example.TbBiddingDeliveryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_bidding_delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_bidding_delivery
    where id = #{id}
  </select>
  <select id="selectPage" parameterType="com.grainoil.system.domain.dto.BiddingDeliveryPageDto" resultType="com.grainoil.system.domain.vo.storage_contract.BiddingDeliveryPageVo">
    SELECT d.id AS id, s.organize_name AS organizeName,d.quantity AS quantity,
    d.contract_code AS contractCode,s.contract_code AS storageContractCode,
    d.contract_name AS contractName,d.contract_state AS contractState,
    CONCAT(TO_CHAR(s.begin_date,'yyyy-MM-dd'),'~',TO_CHAR(s.end_date,'yyyy-MM-dd')) AS storageDate,
    CONCAT(TO_CHAR(d.begin_date,'yyyy-MM-dd'),'~',TO_CHAR(d.end_date,'yyyy-MM-dd')) AS deliveryDate
    FROM tb_bidding_delivery d LEFT JOIN tb_storage_contract s ON s.id = d.storage_contract_id
    WHERE 1 = 1
    <if test="organizeId != null">
      and s.organize_id = #{organizeId}
    </if>
    <if test="contractCode != null">
      and d.contract_code = #{contractCode}
    </if>
    <if test="storageContractCode != null">
      and s.contract_code = #{storageContractCode}
    </if>
<!--    <if test="beginDate != null">-->
<!--      and s.apply_date &gt;= #{beginDate}-->
<!--    </if>-->
<!--    <if test="endDate != null">-->
<!--      and s.apply_date &lt;= #{endDate}-->
<!--    </if>-->
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_bidding_delivery
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.grainoil.system.domain.TbBiddingDelivery">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_bidding_delivery (storage_contract_id, contract_code, 
      contract_name, file_id, contract_state, 
      quantity, begin_date, end_date, 
      create_by, create_id, create_time, 
      update_by, update_id, update_time, 
      del_flag)
    values (#{storageContractId}, #{contractCode}, 
      #{contractName}, #{fileId}, #{contractState}, 
      #{quantity}, #{beginDate}, #{endDate}, 
      #{createBy}, #{createId}, #{createTime}, 
      #{updateBy}, #{updateId}, #{updateTime}, 
      #{delFlag})
  </insert>
  <insert id="insertSelective" parameterType="com.grainoil.system.domain.TbBiddingDelivery">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_bidding_delivery
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storageContractId != null">
        storage_contract_id,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="contractState != null">
        contract_state,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="beginDate != null">
        begin_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storageContractId != null">
        #{storageContractId},
      </if>
      <if test="contractCode != null">
        #{contractCode},
      </if>
      <if test="contractName != null">
        #{contractName},
      </if>
      <if test="fileId != null">
        #{fileId},
      </if>
      <if test="contractState != null">
        #{contractState},
      </if>
      <if test="quantity != null">
        #{quantity},
      </if>
      <if test="beginDate != null">
        #{beginDate},
      </if>
      <if test="endDate != null">
        #{endDate},
      </if>
      <if test="createBy != null">
        #{createBy},
      </if>
      <if test="createId != null">
        #{createId},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateBy != null">
        #{updateBy},
      </if>
      <if test="updateId != null">
        #{updateId},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="delFlag != null">
        #{delFlag},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grainoil.system.domain.example.TbBiddingDeliveryExample" resultType="java.lang.Long">
    select count(*) from tb_bidding_delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_bidding_delivery
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.storageContractId != null">
        storage_contract_id = #{record.storageContractId},
      </if>
      <if test="record.contractCode != null">
        contract_code = #{record.contractCode},
      </if>
      <if test="record.contractName != null">
        contract_name = #{record.contractName},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId},
      </if>
      <if test="record.contractState != null">
        contract_state = #{record.contractState},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity},
      </if>
      <if test="record.beginDate != null">
        begin_date = #{record.beginDate},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_bidding_delivery
    set id = #{record.id},
      storage_contract_id = #{record.storageContractId},
      contract_code = #{record.contractCode},
      contract_name = #{record.contractName},
      file_id = #{record.fileId},
      contract_state = #{record.contractState},
      quantity = #{record.quantity},
      begin_date = #{record.beginDate},
      end_date = #{record.endDate},
      create_by = #{record.createBy},
      create_id = #{record.createId},
      create_time = #{record.createTime},
      update_by = #{record.updateBy},
      update_id = #{record.updateId},
      update_time = #{record.updateTime},
      del_flag = #{record.delFlag}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grainoil.system.domain.TbBiddingDelivery">
    update tb_bidding_delivery
    <set>
      <if test="storageContractId != null">
        storage_contract_id = #{storageContractId},
      </if>
      <if test="contractCode != null">
        contract_code = #{contractCode},
      </if>
      <if test="contractName != null">
        contract_name = #{contractName},
      </if>
      <if test="fileId != null">
        file_id = #{fileId},
      </if>
      <if test="contractState != null">
        contract_state = #{contractState},
      </if>
      <if test="quantity != null">
        quantity = #{quantity},
      </if>
      <if test="beginDate != null">
        begin_date = #{beginDate},
      </if>
      <if test="endDate != null">
        end_date = #{endDate},
      </if>
      <if test="createBy != null">
        create_by = #{createBy},
      </if>
      <if test="createId != null">
        create_id = #{createId},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy},
      </if>
      <if test="updateId != null">
        update_id = #{updateId},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grainoil.system.domain.TbBiddingDelivery">
    update tb_bidding_delivery
    set storage_contract_id = #{storageContractId},
      contract_code = #{contractCode},
      contract_name = #{contractName},
      file_id = #{fileId},
      contract_state = #{contractState},
      quantity = #{quantity},
      begin_date = #{beginDate},
      end_date = #{endDate},
      create_by = #{createBy},
      create_id = #{createId},
      create_time = #{createTime},
      update_by = #{updateBy},
      update_id = #{updateId},
      update_time = #{updateTime},
      del_flag = #{delFlag}
    where id = #{id}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into tb_bidding_delivery  (storage_contract_id, contract_code, 
        contract_name, file_id, contract_state, 
        quantity, begin_date, end_date, 
        create_by, create_id, create_time, 
        update_by, update_id, update_time, 
        del_flag)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.storageContractId}, #{item.contractCode}, 
        #{item.contractName}, #{item.fileId}, #{item.contractState}, 
        #{item.quantity}, #{item.beginDate}, #{item.endDate}, 
        #{item.createBy}, #{item.createId}, #{item.createTime}, 
        #{item.updateBy}, #{item.updateId}, #{item.updateTime}, 
        #{item.delFlag})
      </foreach>
    </if>
  </insert>
</mapper>